from collections import deque


class Solution:
    def isValid(self, s: str) -> bool:
        """Определяет, является ли строка, содержащая только символы скобок:
        '(', ')', '{', '}', '[' и ']', валидной.

        Строка валидна если выполняются условия:

        1. Открывающие скобки должны закрываться скобками того же типа
        2. Открывающие скобки должны закрываться в правильном порядке
        3. Каждая закрывающая скобка имеет соответствующую открывающую
        скобку того же вида

        Временная сложность O(n), где n - длина строки.
        Пространственная сложность O(n), - стек увеличивается линейно
        от длины строки

        Для реализации стека мы используем дэк (двухстороннюю очередь),
        реализованный через двух связанный список.
        Операция добавления элемента в конец O(1).

        Args:
            s (str): входная строка со скобками

        Returns:
            bool: является ли строка валидной
        """
        # если число символов в строке нечетное, точно есть
        # скобка без пары, строка со скобками не валидная
        if len(s) % 2 != 0:
            return False

        stack = deque()
        mapping = {"(": ")", "[": "]", "{": "}"}

        for char in s:
            # операция O(1) для множества
            if char in mapping:
                stack.append(char)

            # операция O(1) для словаря (хэш таблицы)
            elif not stack or mapping[stack.pop()] != char:
                return False

        return not stack
